name: tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

    
jobs:
  unit:
     name: unit
     runs-on: ubuntu-latest
     steps:

     - name: Check out code
       uses: actions/checkout@v5

     - name: unit tests
       run: make test

  integration:
    name: integration-${{ matrix.storage }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        storage: [memory, postgres]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Run bridge-sdk tests against ${{ matrix.storage }} storage
      run: docker compose -f docker-compose.${{ matrix.storage }}.yml up integration

    - name: Run go-integration tests against ${{ matrix.storage }} storage
      run: docker compose -f docker-compose.${{ matrix.storage }}.yml up --exit-code-from gointegration

    - name: Get performance metrics
      if: github.event_name == 'pull_request'
      run: |
        ./scripts/pr-metrics.sh "${{ matrix.storage }}" > metrics.md

    - name: Comment PR
      if: github.event_name == 'pull_request'  
      uses: mshick/add-pr-comment@v2
      with:
        message-path: metrics.md
        message-id: performance-metrics-${{ matrix.storage }}-${{ github.run_number }}
        refresh-message-position: true

    - name: Clean up containers
      if: always()
      run: docker compose -f docker-compose.${{ matrix.storage }}.yml down -v
