version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bridge
      POSTGRES_USER: bridge_user
      POSTGRES_PASSWORD: bridge_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bridge_user -d bridge"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bridge_network

  bridge:
    build: .
    environment:
      PORT: 8081
      POSTGRES_URI: "postgres://bridge_user:bridge_password@postgres:5432/bridge?sslmode=disable"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    ports:
      - "8081:8081"  # bridge
      - "9103:9103"  # pprof and metrics
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  integration:
    build:
      context: .
      dockerfile: Dockerfile.integration
    container_name: bridge-integration
    environment:
      BRIDGE_URL: "http://bridge:8081/bridge"
    depends_on:
      bridge:
        condition: service_started
    networks:
      - bridge_network
    command: ["/bin/bash", "-c", "make test-bridge-sdk"]
    # command: ["/bin/bash", "-c", "tail -f /dev/null"]

  gointegration:
    build:
      context: .
      dockerfile: Dockerfile.gointegration
    container_name: bridge-gointegration
    environment:
      BRIDGE_URL: "http://bridge:8081/bridge"
    depends_on:
      bridge:
        condition: service_started
    networks:
      - bridge_network
    command: ["/bin/bash", "-c", "make test-gointegration"]
    # command: ["/bin/bash", "-c", "tail -f /dev/null"]

  benchmark:
    build:
      context: .
      dockerfile: Dockerfile.benchmark
    container_name: benchmark
    working_dir: /scripts
    environment:
      BRIDGE_URL: "http://bridge:8081/bridge"
      RAMP_UP: "1m"
      HOLD: "3m"
      RAMP_DOWN: "1m"
      SSE_VUS: "500"
      SEND_RATE: "10000"
    depends_on:
      bridge:
        condition: service_started
    networks:
      - bridge_network
    volumes:
      - ./benchmark:/scripts:ro
      - ./benchmark/results:/results
    entrypoint: [ "/bin/sh", "-lc" ]
    command:
      - >
        printf '\n\n======  pprof BEFORE  ======\n\n';
        pprof -top -sample_index=alloc_space -unit=GB -nodecount=5 http://bridge:9103/debug/pprof/allocs 2>/dev/null || true;
        pprof -proto http://bridge:9103/debug/pprof/allocs > /tmp/allocs-before.pb.gz 2>/dev/null || true;
        printf '\n\n====== starting BENCH ======\n\n';
        printf 'Running load test for %s with:\n' "$$TEST_DURATION";
        printf '  - SSE Virtual Users: %s\n' "$$SSE_VUS";
        printf '  - Send Rate: %s msg/s\n' "$$SEND_RATE";
        printf '  - Target: %s\n\n' "$$BRIDGE_URL";
        printf '\n\nPlease wait...\n\n';
        /usr/local/bin/k6 run --quiet --summary-export=/results/summary.json /scripts/bridge_test.js;
        printf '\n\n======  pprof AFTER   ======\n\n';
        pprof -top -sample_index=alloc_space -unit=GB -nodecount=5 http://bridge:9103/debug/pprof/allocs 2>/dev/null || true;
        pprof -proto http://bridge:9103/debug/pprof/allocs > /tmp/allocs-after.pb.gz 2>/dev/null || true;
        printf '\n\n======   pprof DIFF   ======\n\n';
        pprof -top -sample_index=alloc_space -unit=GB -nodecount=5 -base=/tmp/allocs-before.pb.gz /tmp/allocs-after.pb.gz || true;
        rm -f /tmp/allocs-before.pb.gz /tmp/allocs-after.pb.gz 2>/dev/null || true;
        printf '\n\n============================\n\n';

volumes:
  postgres_data:

networks:
  bridge_network:
    driver: bridge
