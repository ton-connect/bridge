/*
 *
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package tonmetrics

// When dApp POSTs a request to /message.
type BridgeRequestReceivedEvent struct {
	// Bridge URL.
	BridgeUrl string `json:"bridge_url,omitempty"`
	// The client environment.
	ClientEnvironment string `json:"client_environment,omitempty"`
	// A unique session ID.
	ClientId string `json:"client_id,omitempty"`
	// The timestamp of the event on the client side, in Unix time (stored as an integer).
	ClientTimestamp int32 `json:"client_timestamp,omitempty"`
	// Unique random event UUID generated by the sender. Used for deduplication on the backend side.
	EventId   string `json:"event_id,omitempty"`
	EventName string `json:"event_name,omitempty"`
	// Message ID.
	MessageId string `json:"message_id,omitempty"`
	// Network id (-239 for the mainnet and -3 for the testnet). Other values should be rejected.
	NetworkId string `json:"network_id,omitempty"`
	// Request type.
	RequestType string `json:"request_type,omitempty"`
	// The subsystem used to collect the event (possible values: dapp, bridge, wallet).
	Subsystem string `json:"subsystem,omitempty"`
	// ID to aggregate multiple events into one trace. UUIDv7 must be used (first 48 bits must be unix_ts_ms as in the specification). trace_id older than 24h won't be accepted.
	TraceId string `json:"trace_id,omitempty"`
	// A unique identifier for the user (refer to subsystem session details for more information). May be omitted, in this case it will be generated on the backend side and generated. UUID must be used.
	UserId string `json:"user_id,omitempty"`
	// The version of the sending subsystem.
	Version string `json:"version,omitempty"`
}
