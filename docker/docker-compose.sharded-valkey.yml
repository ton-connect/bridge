services:
  valkey-shard1:
    image: valkey/valkey:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - valkey_shard1_data:/data
    command: valkey-server --port 6379 --cluster-enabled yes --cluster-config-file nodes-6379.conf --cluster-node-timeout 5000 --appendonly yes
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      bridge_network:
        ipv4_address: 172.20.0.20
    restart: unless-stopped

  valkey-shard2:
    image: valkey/valkey:7.2-alpine
    ports:
      - "6380:6380"
    volumes:
      - valkey_shard2_data:/data
    command: valkey-server --port 6380 --cluster-enabled yes --cluster-config-file nodes-6380.conf --cluster-node-timeout 5000 --appendonly yes
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "6380", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      bridge_network:
        ipv4_address: 172.20.0.21
    restart: unless-stopped

  valkey-shard3:
    image: valkey/valkey:7.2-alpine
    ports:
      - "6381:6381"
    volumes:
      - valkey_shard3_data:/data
    command: valkey-server --port 6381 --cluster-enabled yes --cluster-config-file nodes-6381.conf --cluster-node-timeout 5000 --appendonly yes
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "6381", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      bridge_network:
        ipv4_address: 172.20.0.22
    restart: unless-stopped

  valkey-cluster-init:
    image: valkey/valkey:7.2-alpine
    depends_on:
      valkey-shard1:
        condition: service_healthy
      valkey-shard2:
        condition: service_healthy
      valkey-shard3:
        condition: service_healthy
    networks:
      bridge_network:
        ipv4_address: 172.20.0.23
    command: >
      sh -c "
        sleep 10 &&
        echo 'Resetting cluster state on all nodes...' &&
        valkey-cli -h 172.20.0.20 -p 6379 FLUSHALL &&
        valkey-cli -h 172.20.0.21 -p 6380 FLUSHALL &&
        valkey-cli -h 172.20.0.22 -p 6381 FLUSHALL &&
        valkey-cli -h 172.20.0.20 -p 6379 CLUSTER RESET HARD &&
        valkey-cli -h 172.20.0.21 -p 6380 CLUSTER RESET HARD &&
        valkey-cli -h 172.20.0.22 -p 6381 CLUSTER RESET HARD &&
        echo 'Creating new cluster...' &&
        valkey-cli --cluster create 172.20.0.20:6379 172.20.0.21:6380 172.20.0.22:6381 --cluster-replicas 0 --cluster-yes &&
        echo 'Cluster created successfully' &&
        valkey-cli -c -h 172.20.0.20 -p 6379 cluster nodes &&
        valkey-cli -c -h 172.20.0.20 -p 6379 cluster info
      "
    restart: "no"

  bridge:
    build:
      context: ..
      dockerfile: docker/Dockerfile.bridge3
    container_name: bridge
    environment:
      LOG_LEEVEL: "debug"
      PORT: 8081
      STORAGE: "valkey"
      VALKEY_URI: "redis://valkey-shard1:6379"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      valkey-shard1:
        condition: service_healthy
      valkey-shard2:
        condition: service_healthy
      valkey-shard3:
        condition: service_healthy
      valkey-cluster-init:
        condition: service_completed_successfully
    networks:
      bridge_network:
        ipv4_address: 172.20.0.30
    restart: unless-stopped

  integration:
    build:
      context: ..
      dockerfile: docker/Dockerfile.integration
    container_name: bridge-integration
    environment:
      BRIDGE_URL: "http://bridge:8081/bridge"
    depends_on:
      bridge:
        condition: service_started
    networks:
      bridge_network:
        ipv4_address: 172.20.0.40
    command: ["/bin/bash", "-c", "make test-bridge-sdk"]
    # command: ["/bin/bash", "-c", "tail -f /dev/null"]

  gointegration:
    build:
      context: ..
      dockerfile: docker/Dockerfile.gointegration
    container_name: bridge-gointegration
    environment:
      BRIDGE_URL: "http://bridge:8081/bridge"
    depends_on:
      bridge:
        condition: service_started
    networks:
      bridge_network:
        ipv4_address: 172.20.0.50
    command: ["/bin/bash", "-c", "make test-gointegration"]
    # command: ["/bin/bash", "-c", "tail -f /dev/null"]

  data-monitor:
    image: valkey/valkey:7.2-alpine
    container_name: shard-data-monitor
    depends_on:
      bridge:
        condition: service_started
    networks:
      bridge_network:
        ipv4_address: 172.20.0.60
    command: >
      sh -c "
        echo 'Monitoring data distribution across shards...' &&
        sleep 30 &&
        while true; do
          echo '=== Data Distribution Report ===' &&
          echo 'Shard 1 (172.20.0.20:6379):' &&
          valkey-cli -h 172.20.0.20 -p 6379 info keyspace &&
          valkey-cli -h 172.20.0.20 -p 6379 dbsize &&
          echo 'Shard 2 (172.20.0.21:6380):' &&
          valkey-cli -h 172.20.0.21 -p 6380 info keyspace &&
          valkey-cli -h 172.20.0.21 -p 6380 dbsize &&
          echo 'Shard 3 (172.20.0.22:6381):' &&
          valkey-cli -h 172.20.0.22 -p 6381 info keyspace &&
          valkey-cli -h 172.20.0.22 -p 6381 dbsize &&
          echo 'Cluster Info:' &&
          valkey-cli -c -h 172.20.0.20 -p 6379 cluster info &&
          echo '==============================' &&
          sleep 60
        done
      "
    restart: unless-stopped

  benchmark:
    build:
      context: ..
      dockerfile: docker/Dockerfile.benchmark
    container_name: benchmark
    working_dir: /scripts
    environment:
      BRIDGE_URL: "http://bridge:8081/bridge"
      RAMP_UP: "1m"
      HOLD: "3m"
      RAMP_DOWN: "1m"
      SSE_VUS: "500"
      SEND_RATE: "10000"
    depends_on:
      bridge:
        condition: service_started
    networks:
      - bridge_network
    volumes:
      - ../benchmark:/scripts:ro
      - ./benchmark/results:/results
    entrypoint: [ "/bin/sh", "-lc" ]
    command:
      - >
        printf '\n\n======  pprof BEFORE  ======\n\n';
        pprof -top -sample_index=alloc_space -unit=GB -nodecount=5 http://bridge:9103/debug/pprof/allocs 2>/dev/null || true;
        pprof -proto http://bridge:9103/debug/pprof/allocs > /tmp/allocs-before.pb.gz 2>/dev/null || true;
        printf '\n\n====== starting BENCH ======\n\n';
        printf 'Running load test for %s with:\n' "$$TEST_DURATION";
        printf '  - SSE Virtual Users: %s\n' "$$SSE_VUS";
        printf '  - Send Rate: %s msg/s\n' "$$SEND_RATE";
        printf '  - Target: %s\n\n' "$$BRIDGE_URL";
        printf '\n\nPlease wait...\n\n';
        /usr/local/bin/k6 run --quiet --summary-export=/results/summary.json /scripts/bridge_test.js;
        printf '\n\n======  pprof AFTER   ======\n\n';
        pprof -top -sample_index=alloc_space -unit=GB -nodecount=5 http://bridge:9103/debug/pprof/allocs 2>/dev/null || true;
        pprof -proto http://bridge:9103/debug/pprof/allocs > /tmp/allocs-after.pb.gz 2>/dev/null || true;
        printf '\n\n======   pprof DIFF   ======\n\n';
        pprof -top -sample_index=alloc_space -unit=GB -nodecount=5 -base=/tmp/allocs-before.pb.gz /tmp/allocs-after.pb.gz || true;
        rm -f /tmp/allocs-before.pb.gz /tmp/allocs-after.pb.gz 2>/dev/null || true;
        printf '\n\n============================\n\n';

volumes:
  valkey_shard1_data:
  valkey_shard2_data:
  valkey_shard3_data:

networks:
  bridge_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
